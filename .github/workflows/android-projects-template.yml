name: Commun config for Android projects

on:
  workflow_call:
    inputs:
      DO_CONF_GIT:
        type: boolean
        default: true
      DO_CACHE:
        type: boolean
        default: true
      DO_CLEAN:
        type: boolean
        default: true
      DO_BUILD:
        type: boolean
        default: true
      DO_TEST:
        type: boolean
        default: true
      DO_LINT:
        type: boolean
        default: true
      DO_SONAR:
        type: boolean
        default: true
      DO_UPLOAD_ARTIFACT:
        type: boolean
        default: false
      DO_PUBLISH:
        type: boolean
        default: false
      
    secrets:
      GIT_CONFIG_KEY:
        required: true
      GIT_CONFIG_VALUE:
        required: true

jobs:
  build:
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v3

        - name: Config Git
          if: "${{ inputs.DO_CONF_GIT == true }}"
          run: git config --global ${{ secrets.GIT_CONFIG_KEY }} ${{ secrets.GIT_CONFIG_VALUE }}
        
        - name: set up JDK 11
          uses: actions/setup-java@v3
          with:
            distribution: 'temurin'
            java-version: 11
            cache: 'gradle'

        - name: Setup Android SDK
          uses: android-actions/setup-android@v2

        - name: Decode and save keystore to file for apps
          run: |
            echo ${{ secrets.KEY_STORE_FUSION_FILE }} | base64 -d > KeyStore-Fusion.jks
            echo ${{ secrets.KEY_STORE_AIRLIQUIDE_FILE }} | base64 -d > KeyStore-Airliquide.jks
            
        - name: Restore gradle.properties
          run: |
            mkdir -p ~/.gradle/
            echo "${{ secrets.ANDROID_GRADLE_PROPERTIES }}" > ~/.gradle/gradle.properties

        - name: Grant execute permission for gradlew
          run: chmod +x gradlew
          
        - name: Clean with Gradle
          if: "${{ inputs.DO_CLEAN }}"
          run: ./gradlew clean 
          
        - name: Lint with Gradle
          if: "${{ inputs.DO_LINT }}"
          run: ./gradlew lint
          
        - name: Tests with Gradle
          if: "${{ inputs.DO_TEST }}"
          run: ./gradlew test

        - name: Cache SonarQube packages
          uses: actions/cache@v1
          if: "${{ inputs.DO_SONAR }}"
          with:
            path: ~/.sonar/cache
            key: ${{ runner.os }}-sonar
            restore-keys: ${{ runner.os }}-sonar
        - name: Sonar analyze
          if: "${{ inputs.DO_SONAR }}"
          run: ./gradlew sonar --info

        - name: Build with Gradle
          if: "${{ inputs.DO_BUILD }}"
          run: ./gradlew ${{ inputs.BUILD_TASK }}
        
        - name: Publish with Gradle
          if: "${{ inputs.DO_PUBLISH && github.event_name != 'pull_request' }}"
          run: ./gradlew publish

        - name: Move Artifact bundle into current folder
          if: "${{ inputs.DO_UPLOAD_ARTIFACT }}"
          shell: bash
          run: |
            mv ${{ inputs.ARTIFACT_PATH }} artifact.aab

        - name: Upload APK artifact
          uses: actions/upload-artifact@v2
          if: "${{ inputs.DO_UPLOAD_ARTIFACT }}"
          with:
            name: universal-apk
            path: artifact.aab
            retention-days: 7
        
        - name: App Center
          uses: wzieba/AppCenter-Github-Action@v1.3.3
          if: "${{ inputs.DO_APP_CENTER }}"
          with:
            appName: ${{ inputs.APP_CENTER_APP_NAME }}
            token: ${{secrets.APP_CENTER_TOKEN}}
            group: ${{ inputs.APP_CENTER_GROUP }}
            file: artifact.aab
            notifyTesters: ${{ inputs.APP_CENTER_NOTIFY }}
            debug: true